
indexer
{
}

searchd
{
  listen = sphinx:36307:mysql41
  log = /shared/searchd.development.log
  query_log = /shared/searchd.development.query.log
  pid_file = /shared/searchd.development.pid
  workers = threads
  binlog_path = /shared
}

source page_core_0
{
  type = pgsql
  sql_host = psql
  sql_user = rails
  sql_pass = qwerty
  sql_db = eastflower
  sql_query_pre = SET TIME ZONE UTC
  sql_query = SELECT "pages"."id" * 7 + 0 AS "id", "pages"."title" AS "title", "pages"."intro" AS "intro", "pages"."content" AS "content", "pages"."id" AS "sphinx_internal_id", 'Page' AS "sphinx_internal_class", 0 AS "sphinx_deleted", "pages"."user_id" AS "user_id", extract(epoch from "pages"."created_at")::int AS "created_at", extract(epoch from "pages"."updated_at")::int AS "updated_at", extract(epoch from "pages"."published_at")::int AS "published_at" FROM "pages" WHERE ("pages"."id" BETWEEN $start AND $end AND state = 'published') GROUP BY "pages"."id", "pages"."title", "pages"."intro", "pages"."content", "pages"."id", "pages"."user_id", "pages"."created_at", "pages"."updated_at", "pages"."published_at"
  sql_query_range = SELECT COALESCE(MIN("pages"."id"), 1), COALESCE(MAX("pages"."id"), 1) FROM "pages"
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = user_id
  sql_attr_uint = created_at
  sql_attr_uint = updated_at
  sql_attr_uint = published_at
  sql_attr_string = sphinx_internal_class
}

index page_core
{
  type = plain
  path = /opt/sphinx/index/page_core
  morphology = stem_en, stem_ru
  min_infix_len = 3
  source = page_core_0
}

source post_core_0
{
  type = pgsql
  sql_host = psql
  sql_user = rails
  sql_pass = qwerty
  sql_db = eastflower
  sql_query_pre = SET TIME ZONE UTC
  sql_query = SELECT "posts"."id" * 7 + 1 AS "id", "posts"."title" AS "title", "posts"."intro" AS "intro", "posts"."content" AS "content", "posts"."id" AS "sphinx_internal_id", 'Post' AS "sphinx_internal_class", 0 AS "sphinx_deleted", "posts"."user_id" AS "user_id", extract(epoch from "posts"."created_at")::int AS "created_at", extract(epoch from "posts"."updated_at")::int AS "updated_at", extract(epoch from "posts"."published_at")::int AS "published_at" FROM "posts" WHERE ("posts"."id" BETWEEN $start AND $end AND state = 'published') GROUP BY "posts"."id", "posts"."title", "posts"."intro", "posts"."content", "posts"."id", "posts"."user_id", "posts"."created_at", "posts"."updated_at", "posts"."published_at"
  sql_query_range = SELECT COALESCE(MIN("posts"."id"), 1), COALESCE(MAX("posts"."id"), 1) FROM "posts"
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_uint = user_id
  sql_attr_uint = created_at
  sql_attr_uint = updated_at
  sql_attr_uint = published_at
  sql_attr_string = sphinx_internal_class
}

index post_core
{
  type = plain
  path = /opt/sphinx/index/post_core
  morphology = stem_en, stem_ru
  min_infix_len = 3
  source = post_core_0
}

source admin_product_core_0
{
  type = pgsql
  sql_host = psql
  sql_user = rails
  sql_pass = qwerty
  sql_db = eastflower
  sql_query_pre = SET TIME ZONE UTC
  sql_query = SELECT "products"."id" * 7 + 2 AS "id", "products"."title" AS "title", "products"."intro" AS "intro", "products"."content" AS "content", "products"."fts_auto_data" AS "fts_auto_data", "products"."fts_manual_data" AS "fts_manual_data", "products"."id" AS "sphinx_internal_id", 'Product' AS "sphinx_internal_class", 0 AS "sphinx_deleted" FROM "products" WHERE ("products"."id" BETWEEN $start AND $end AND state IN ('draft', 'published')) GROUP BY "products"."id", "products"."title", "products"."intro", "products"."content", "products"."fts_auto_data", "products"."fts_manual_data", "products"."id"
  sql_query_range = SELECT COALESCE(MIN("products"."id"), 1), COALESCE(MAX("products"."id"), 1) FROM "products"
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_string = sphinx_internal_class
}

index admin_product_core
{
  type = plain
  path = /opt/sphinx/index/admin_product_core
  morphology = stem_en, stem_ru
  min_infix_len = 3
  source = admin_product_core_0
}

source product_core_0
{
  type = pgsql
  sql_host = psql
  sql_user = rails
  sql_pass = qwerty
  sql_db = eastflower
  sql_query_pre = SET TIME ZONE UTC
  sql_query = SELECT "products"."id" * 7 + 2 AS "id", "products"."title" AS "title", "products"."intro" AS "intro", "products"."content" AS "content", "products"."fts_auto_data" AS "fts_auto_data", "products"."fts_manual_data" AS "fts_manual_data", "products"."id" AS "sphinx_internal_id", 'Product' AS "sphinx_internal_class", 0 AS "sphinx_deleted" FROM "products" WHERE ("products"."id" BETWEEN $start AND $end AND state = 'published' AND amount > 0) GROUP BY "products"."id", "products"."title", "products"."intro", "products"."content", "products"."fts_auto_data", "products"."fts_manual_data", "products"."id"
  sql_query_range = SELECT COALESCE(MIN("products"."id"), 1), COALESCE(MAX("products"."id"), 1) FROM "products"
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_string = sphinx_internal_class
}

index product_core
{
  type = plain
  path = /opt/sphinx/index/product_core
  morphology = stem_en, stem_ru
  min_infix_len = 3
  source = product_core_0
}

index page
{
  type = distributed
  local = page_core
}

index post
{
  type = distributed
  local = post_core
}

index product
{
  type = distributed
  local = admin_product_core
  local = product_core
}
